# Default values for akash-node.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/ovrclk/akash
  pullPolicy: IfNotPresent
  tag: 0.16.3

# Common Values

keyring_backend: "test"
home: "/root/.akash"
debug: "false"
snapshot_url: "https://cosmos-snapshots.s3.filebase.com/akash/pruned/snapshot.json"
#For nightly snapshots use: https://cosmos-snapshots.s3.filebase.com/akash/pruned/snapshot.json
#For 0.16.3 snapshot use : https://link.us1.storjshare.io/s/jv6za6wwm7d3rd62dkwioewcuuqq/akashnet/akashnet-2_2022-04-27.tar?download=1

# Set Values to run a single Akash node connected to an existing network
# Defaults to mainnet
akash_node:
  enabled: true
  moniker: mynode
  chainid: akashnet-2
  net: https://raw.githubusercontent.com/ovrclk/net/master/mainnet

persistent_storage:
  enabled: false
  capacity: 100Gi
  path: /mnt/local-storage
  host: k8s-node-0

# Enable to run a 4 node Akash network from bootstrap
bootstrap:
  enabled: false
  validator1:
  validator2:
  validator3:
  validator4:
  node_key_1:
  node_key_2:
  node_key_3:
  node_key_4:
  priv_key_1:
  priv_key_2:
  priv_key_3:
  priv_key_4:
  genesis:

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
