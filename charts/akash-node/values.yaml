# Default values for akash-node.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/ovrclk/akash
  pullPolicy: IfNotPresent
  tag: 0.16.3

# Common Values

keyring_backend: "test"
home: "/root/.akash"
debug: "false"

# Set Values to run a single Akash node connected to an existing network
# Defaults to mainnet
akash_node:
  enabled: true
  moniker: mynode
  chainid: akashnet-2
  net: https://raw.githubusercontent.com/ovrclk/net/master/mainnet
  peers: 3b623841a46e7c3fa464dc3d5891d288aa398983@135.181.181.120:28956,0c1d3aae7dfe1cfcf5ecf3258bf6283cee9b1159@35.181.181.119:28956,e0d21ebb42665cc4ea32f67240c779fe6d45ac4b@135.181.181.121:28956,416fc5ccbf57a2e3f0e63c70e92dfd82f1ea8cb4@35.181.181.122:28956,d28fcf241dc785a33a40045a237f91db6c3106f0@62.171.139.205:29656

persistent_storage:
  enabled: false
  capacity: 100Gi
  path: /mnt/local-storage
  host: k8s-node-0

# Enable to run a 4 node Akash network from bootstrap
bootstrap:
  enabled: false
  validator1:
  validator2:
  validator3:
  validator4:
  node_key_1:
  node_key_2:
  node_key_3:
  node_key_4:
  priv_key_1:
  priv_key_2:
  priv_key_3:
  priv_key_4:
  genesis:

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
