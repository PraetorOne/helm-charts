{{- if .Values.akash_node.enabled -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: akash-node-config
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "akash-node.labels" . | nindent 4 }}
data:
  node.sh: |
    #!/bin/bash
    set -x

    if [ ! -d "$AKASH_HOME/data" ]
    then
      /bin/akash init --chain-id "$AKASH_CHAIN_ID" "$AKASH_MONIKER"
      sed -i -E 's#^(minimum-gas-prices[[:space:]]+=[[:space:]]+)""$#\1"0.025uakt"#' $AKASH_HOME/config/app.toml
    fi

    apt update && apt -y install curl > /dev/null 2>&1
    curl -s "$AKASH_NET/genesis.json" > "$AKASH_HOME/config/genesis.json"

    if [[ $AKASH_NET == "https://raw.githubusercontent.com/ovrclk/net/master/mainnet" ]]
    then
      apt -y install jq aria2 wget nmap > /dev/null 2>&1
      rm -rf $AKASH_HOME/data ; mkdir -p $AKASH_HOME/data ; cd $AKASH_HOME/data
      export AKASH_ROSETTA_ENABLE=false
      export AKASH_P2P_SEED_MODE=true
      #SNAPSHOT_URL=$(curl https://cosmos-snapshots.s3.filebase.com/akash/pruned/snapshot.json | jq -r .latest)
      SNAPSHOT_URL="https://link.us1.storjshare.io/s/jv6za6wwm7d3rd62dkwioewcuuqq/akashnet/akashnet-2_2022-04-27.tar?download=1"
      echo "Using latest blockchain snapshot, $SNAPSHOT_URL" ; aria2c --out=snapshot.tar --summary-interval 15 --check-certificate=false --max-tries=99 --retry-wait=5 --always-resume=true --max-file-not-found=99 --conditional-get=true -s 16 -x 16 -k 1M -j 1 --async-dns=false $SNAPSHOT_URL
      tar -xvf snapshot.tar
      rm -f snapshot.tar
    fi

    /bin/akash validate-genesis
    /bin/akash start
    if $AKASH_DEBUG == "true"; then sleep 5000; fi
{{- end }}
